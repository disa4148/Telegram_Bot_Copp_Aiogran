import json
import bot
import asyncio

from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

dp = bot.dp

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ JSON
def load_data_from_json(file_path):
    with open(file_path, 'r', encoding='utf-8') as file:
        data = json.load(file)
    return data['content']

# –ü–æ–ª—É—á–∞–µ–º –∏–º—è –∫—É—Ä—Å–∞ –ø–æ –µ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É
def get_course_name_by_id(course_id, content):
    for item in content:
        if str(item['id']) == course_id:
            return item['name']
    return None

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /course
@dp.message_handler(commands=['course'])
async def start_work(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –∫—É—Ä—Å  üôå:")

    content = load_data_from_json('courses.json')

    current_page = 1
    index = current_page - 1

    if index >= len(content):
        await message.answer("–í—ã –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫—É—Ä—Å–æ–≤. üö´\n\n"
                             "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—à–ª—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫—É—Ä—Å–æ–≤ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥' ‚¨Ö")
        return

    item = content[index]
    id = item['id']
    name = item['name']
    image_name = item['image']['name']
    image_src = item['image']['src']

    message_text = f"ID: {id}\n"
    message_text += f"–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞: {name}\n"
    message_text += f"–ò–º—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {image_name}\n"

    keyboard = InlineKeyboardMarkup(row_width=2)
    prev_button = InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="prev_page")
    next_button = InlineKeyboardButton("–í–ø–µ—Ä—ë–¥", callback_data="next_page")
    choose_button = InlineKeyboardButton("–í—ã–±—Ä–∞—Ç—å –∫—É—Ä—Å", callback_data=f"choose_course_{id}")
    keyboard.row(prev_button, next_button)
    keyboard.add(choose_button)

    await message.answer_photo(photo=image_src, caption=message_text, reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
@dp.callback_query_handler(text_contains='prev_page')
async def handle_prev_page(callback_query: types.CallbackQuery):
    current_page = int(callback_query.message.caption.split()[1])
    current_page -= 1
    await update_course_info(callback_query.message, current_page)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–í–ø–µ—Ä—ë–¥"
@dp.callback_query_handler(text_contains='next_page')
async def handle_next_page(callback_query: types.CallbackQuery):
    current_page = int(callback_query.message.caption.split()[1])
    current_page += 1
    await update_course_info(callback_query.message, current_page)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫—É—Ä—Å–∞
@dp.callback_query_handler(lambda c: c.data.startswith('choose_course_'))
async def handle_choose_course(callback_query: types.CallbackQuery):
    course_id = callback_query.data.split('_')[-1]
    content = load_data_from_json('courses.json')
    course_name = get_course_name_by_id(course_id, content)
    await callback_query.answer(f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫—É—Ä—Å: {course_name}")
    

# –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫—É—Ä—Å–µ
async def update_course_info(message: types.Message, current_page: int):
    content = load_data_from_json('courses.json')

    index = current_page - 1

    if index >= len(content):
        await message.answer("–í—ã –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫—É—Ä—Å–æ–≤. üö´\n\n"
                             "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—à–ª—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫—É—Ä—Å–æ–≤ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥' ‚¨Ö")
        return

    item = content[index]
    id = item['id']
    name = item['name']
    image_name = item['image']['name']
    image_src = item['image']['src']

    message_text = f"ID: {id}\n"
    message_text += f"–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞: {name}\n"
    message_text += f"–ò–º—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {image_name}\n"

    keyboard = InlineKeyboardMarkup(row_width=2)
    prev_button = InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="prev_page")
    next_button = InlineKeyboardButton("–í–ø–µ—Ä—ë–¥", callback_data="next_page")
    choose_button = InlineKeyboardButton("–í—ã–±—Ä–∞—Ç—å –∫—É—Ä—Å", callback_data=f"choose_course_{id}")
    keyboard.row(prev_button, next_button)
    keyboard.add(choose_button)

    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π URL –∏–∑ JSON
    new_image_src = item['image']['src']

    # –ò–∑–º–µ–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑—É—è –Ω–æ–≤—ã–π URL
    await message.edit_media(types.InputMediaPhoto(media=new_image_src, caption=message_text), reply_markup=keyboard)
